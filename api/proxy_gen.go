// Code generated by github.com/filecoin-project/lotus/gen/api. DO NOT EDIT.

package api

import (
	"context"
	apitypes "sao-storage-node/api/types"
	"sao-storage-node/types"

	"golang.org/x/xerrors"
)

var ErrNotSupported = xerrors.New("method not supported")

type GatewayApiStruct struct {
	Internal struct {
		Create func(p0 context.Context, p1 types.OrderMeta, p2 []byte) (apitypes.CreateResp, error) ``

		CreateFile func(p0 context.Context, p1 types.OrderMeta) (apitypes.CreateResp, error) ``

		Delete func(p0 context.Context, p1 string, p2 string, p3 string) (apitypes.DeleteResp, error) ``

		GetPeerInfo func(p0 context.Context) (apitypes.GetPeerInfoResp, error) ``

		Load func(p0 context.Context, p1 string, p2 string, p3 string) (apitypes.LoadResp, error) ``

		NodeAddress func(p0 context.Context) (string, error) ``

		Test func(p0 context.Context, p1 string) (string, error) ``

		Update func(p0 context.Context, p1 types.OrderMeta, p2 []byte) (apitypes.UpdateResp, error) ``
	}
}

type GatewayApiStub struct {
}

func (s *GatewayApiStruct) Create(p0 context.Context, p1 types.OrderMeta, p2 []byte) (apitypes.CreateResp, error) {
	if s.Internal.Create == nil {
		return *new(apitypes.CreateResp), ErrNotSupported
	}
	return s.Internal.Create(p0, p1, p2)
}

func (s *GatewayApiStub) Create(p0 context.Context, p1 types.OrderMeta, p2 []byte) (apitypes.CreateResp, error) {
	return *new(apitypes.CreateResp), ErrNotSupported
}

func (s *GatewayApiStruct) CreateFile(p0 context.Context, p1 types.OrderMeta) (apitypes.CreateResp, error) {
	if s.Internal.CreateFile == nil {
		return *new(apitypes.CreateResp), ErrNotSupported
	}
	return s.Internal.CreateFile(p0, p1)
}

func (s *GatewayApiStub) CreateFile(p0 context.Context, p1 types.OrderMeta) (apitypes.CreateResp, error) {
	return *new(apitypes.CreateResp), ErrNotSupported
}

func (s *GatewayApiStruct) Delete(p0 context.Context, p1 string, p2 string, p3 string) (apitypes.DeleteResp, error) {
	if s.Internal.Delete == nil {
		return *new(apitypes.DeleteResp), ErrNotSupported
	}
	return s.Internal.Delete(p0, p1, p2, p3)
}

func (s *GatewayApiStub) Delete(p0 context.Context, p1 string, p2 string, p3 string) (apitypes.DeleteResp, error) {
	return *new(apitypes.DeleteResp), ErrNotSupported
}

func (s *GatewayApiStruct) GetPeerInfo(p0 context.Context) (apitypes.GetPeerInfoResp, error) {
	if s.Internal.GetPeerInfo == nil {
		return *new(apitypes.GetPeerInfoResp), ErrNotSupported
	}
	return s.Internal.GetPeerInfo(p0)
}

func (s *GatewayApiStub) GetPeerInfo(p0 context.Context) (apitypes.GetPeerInfoResp, error) {
	return *new(apitypes.GetPeerInfoResp), ErrNotSupported
}

func (s *GatewayApiStruct) Load(p0 context.Context, p1 string, p2 string, p3 string) (apitypes.LoadResp, error) {
	if s.Internal.Load == nil {
		return *new(apitypes.LoadResp), ErrNotSupported
	}
	return s.Internal.Load(p0, p1, p2, p3)
}

func (s *GatewayApiStub) Load(p0 context.Context, p1 string, p2 string, p3 string) (apitypes.LoadResp, error) {
	return *new(apitypes.LoadResp), ErrNotSupported
}

func (s *GatewayApiStruct) NodeAddress(p0 context.Context) (string, error) {
	if s.Internal.NodeAddress == nil {
		return "", ErrNotSupported
	}
	return s.Internal.NodeAddress(p0)
}

func (s *GatewayApiStub) NodeAddress(p0 context.Context) (string, error) {
	return "", ErrNotSupported
}

func (s *GatewayApiStruct) Test(p0 context.Context, p1 string) (string, error) {
	if s.Internal.Test == nil {
		return "", ErrNotSupported
	}
	return s.Internal.Test(p0, p1)
}

func (s *GatewayApiStub) Test(p0 context.Context, p1 string) (string, error) {
	return "", ErrNotSupported
}

func (s *GatewayApiStruct) Update(p0 context.Context, p1 types.OrderMeta, p2 []byte) (apitypes.UpdateResp, error) {
	if s.Internal.Update == nil {
		return *new(apitypes.UpdateResp), ErrNotSupported
	}
	return s.Internal.Update(p0, p1, p2)
}

func (s *GatewayApiStub) Update(p0 context.Context, p1 types.OrderMeta, p2 []byte) (apitypes.UpdateResp, error) {
	return *new(apitypes.UpdateResp), ErrNotSupported
}

var _ GatewayApi = new(GatewayApiStruct)
